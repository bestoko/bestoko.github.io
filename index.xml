<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Toko&#39;s blog</title>
        <link>https://bestoko.github.io/</link>
        <description>Recent content on Toko&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 14 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://bestoko.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Arch Linux安装备忘录（一）</title>
        <link>https://bestoko.github.io/p/archinstall/</link>
        <pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate>
        
        <guid>https://bestoko.github.io/p/archinstall/</guid>
        <description>&lt;img src="https://bestoko.github.io/p/archinstall/ArchLinux.jpg" alt="Featured image of post Arch Linux安装备忘录（一）" /&gt;&lt;h2 id=&#34;写在前面&#34;&gt;写在前面&lt;/h2&gt;
&lt;p&gt;安装&lt;code&gt;Arch&lt;/code&gt;最好最全面的教程就是官方的 &lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/title/installation_guide&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Installation guide&lt;/a&gt;。但是Wiki上的介绍更偏向文档，而不是新手习惯的那种按步骤编排的教程，加上中文Wiki的翻译往往落后于英文版，缺乏预备&lt;code&gt;Linux&lt;/code&gt;知识的新手经常无从下手。&lt;/p&gt;
&lt;p&gt;笔者也是初学者，本篇文章仅作为自己在&lt;code&gt;Surface Pro 2017&lt;/code&gt;从0开始安装配置&lt;code&gt;Arch&lt;/code&gt;的记录。&lt;/p&gt;
&lt;h2 id=&#34;安装准备&#34;&gt;安装准备&lt;/h2&gt;
&lt;h3 id=&#34;磁盘准备&#34;&gt;磁盘准备&lt;/h3&gt;
&lt;p&gt;我们需要准备一块有空闲区域（没有被分区）的磁盘留给系统的安装。笔者只准备安装Arch单系统，因此在PE里用磁盘管理工具把Surface的磁盘0各个分区全部删除。你也可以在Windows下找到磁盘管理，自行划分一个区域留给安装使用。&lt;/p&gt;
&lt;h3 id=&#34;安装介质&#34;&gt;安装介质&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.archlinux.org/download/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.archlinux.org/download/&lt;/a&gt; 建议从下面的中国镜像下载iso文件&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://rufus.ie/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://rufus.ie/&lt;/a&gt;  我们用Rufus来制作引导盘，&lt;strong&gt;此步需要用到一个空闲U盘&lt;/strong&gt;。需要注意的是写入方式选择DD，分区类型选择GPT而非默认的MBR。&lt;/p&gt;
&lt;h3 id=&#34;设置启动顺序&#34;&gt;设置启动顺序&lt;/h3&gt;
&lt;p&gt;接下来需要进入个人电脑的BIOS里把制作的U盘启动设置为第一位，笔者的Surface额外需要先关闭&lt;code&gt;security boot&lt;/code&gt;，不同电脑进入BIOS的按键略有不同，Surface是开机键和音量+键，其他型号电脑请查阅搜索引擎。&lt;/p&gt;
&lt;h2 id=&#34;安装过程&#34;&gt;安装过程&lt;/h2&gt;
&lt;p&gt;正确设置好启动顺序后，启动时会看到&lt;code&gt;ArchLinux&lt;/code&gt;的界面，按&lt;code&gt;Enter键&lt;/code&gt;选择 &lt;code&gt;Boot Arch Linux&lt;/code&gt; ，等待加载完成后会进入一个有命令提示符的界面。我们接下来将在这个界面执行一系列命令来讲&lt;code&gt;Arch&lt;/code&gt;安装到之前准备的磁盘上。&lt;/p&gt;
&lt;h3 id=&#34;网络连接&#34;&gt;*网络连接&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Arch&lt;/code&gt;的安装需要联网，如果你使用的是有线连接，可以跳过此部分，笔者这里使用无线连接继续安装。&lt;/p&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;iwctl
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;进入&lt;code&gt;iwd&lt;/code&gt;模式，输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;device list
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看你的网卡名字，这里假设是&lt;code&gt;wlan0&lt;/code&gt;，输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;station wlan0 scan
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;检查扫描网络，输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;station wlan0 get-networks
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看网络名字，假设名字叫&lt;code&gt;XXX&lt;/code&gt;，输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;station wlan0 connect XXX
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接着输入密码（如果有密码的话），输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;exit
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;退出iwd模式&lt;/p&gt;
&lt;p&gt;我们可以用&lt;code&gt;ping&lt;/code&gt;命令来检验下是否连接成功&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;ping -c 4 baidu.com
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来我们需要让安装介质里的数据库保持与官方一致的最新版本，因此需要同步一下，在此之前，我们可以配置下最新的镜像来保证下载速度。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;reflector --country China --age 24 --sort rate --portocol https --save /etc/pacman.d/mirrorlist
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;country 限定国家&lt;/li&gt;
&lt;li&gt;age 24 限定下更新时间为24小时内的源&lt;/li&gt;
&lt;li&gt;portocol https 选择https协议更安全&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;执行完毕后，可以用vim查看&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;vim /etc/pacman.d/mirrorlist
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;磁盘分区&#34;&gt;磁盘分区&lt;/h3&gt;
&lt;p&gt;检查磁盘&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;lsblk
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;用gdisk命令进行分区&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;gdisk  /dev/nvme0n1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中nvme01 为你之前准备的磁盘。&lt;/p&gt;
&lt;p&gt;一路默认回车到Last sector 部分，因为我们准备用作启动分区，准备分配512M，所以输入+512M回车，接着输入分区编号ef00。这样第一个分区完成，接着第二个分区笔者分配了+235G，并使用默认的分区编号8300（Linux filesystem），最后剩下2G左右空间一路默认，分区编号输入8200（Linux swap）。确认无误后，w保存quit退出。&lt;/p&gt;
&lt;p&gt;接着格式化我们的三个分区，将nvme01p1格式化为vfat&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;mkfs.vfat /dev/nvme01p1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将nvme01p2格式化为ext4或者xfs（推荐）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;mkfs.xfs /dev/nvme01p2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;mkswap /dev/nvme01p3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;挂载分区&#34;&gt;挂载分区&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;mount /dev/nvme01p2 /mnt
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;mkdir -p /mnt/boot/efi
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;mount /dev/nvme01p1 /mnt/boot/efi
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;swapon /dev/nvme01p3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;安装基本包&#34;&gt;安装基本包&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;pacstrap /mnt base base-devel linux linux-firmware linux-headers vim bash-completion
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;配置fstab&#34;&gt;配置Fstab&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;cat /mnt/etc/fstab
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;确认下是否挂载无误&lt;/p&gt;
&lt;h4 id=&#34;chroot&#34;&gt;chroot&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Chroot&lt;/code&gt;意为&lt;code&gt;Change root&lt;/code&gt;，相当于把操纵权交给我们新安装（或已经存在）的&lt;code&gt;Linux&lt;/code&gt;系统，&lt;strong&gt;执行了这步以后，我们的操作都相当于在磁盘上新装的系统中进行&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;arch-chroot /mnt
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;安装必须软件包&#34;&gt;安装必须软件包&lt;/h4&gt;
&lt;p&gt;现在我们已经&lt;code&gt;Chroot&lt;/code&gt;到了新的系统中，只有一些最基本的包（组件），这时候我们就需要自己安装新的包。&lt;code&gt;ArchLinux&lt;/code&gt;有非常强大的包管理工具&lt;code&gt;pacman&lt;/code&gt;，大部分情况下，一行命令就可以搞定包与依赖的问题。&lt;/p&gt;
&lt;p&gt;安装包的命令格式为&lt;code&gt;pacman -S 包名&lt;/code&gt;，&lt;code&gt;pacman&lt;/code&gt;会自动检查这个包所需要的其他包（即为依赖）并一起装上。下面我们就通过&lt;code&gt;pacman&lt;/code&gt;来安装一些包，这些包在之后会用上，在这里先提前装好。&lt;/p&gt;
&lt;p&gt;执行如下命令（注意大小写，大小写错误会导致包无法找到）：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pacman -S grub efibootmgr efivar networkmanager intel-ucode
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;AMD用户请将&lt;code&gt;intel-ucode&lt;/code&gt;替换成&lt;code&gt;amd-ucode&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;安装bootloader&#34;&gt;安装Bootloader&lt;/h4&gt;
&lt;p&gt;部署&lt;code&gt;grub&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;grub-install /dev/nvme01 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;vim /etc/default/grub
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将&lt;code&gt;GRUB_TIMEOUT=5&lt;/code&gt;改成&lt;code&gt;GRUB_TIMEOUT=2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将&lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;loglevel=3 quiet&amp;quot;&lt;/code&gt; 的&lt;code&gt;quiet&lt;/code&gt;字段删除，这样登录的时候会有日志，如果出现错误可以查看日志文件。&lt;/p&gt;
&lt;p&gt;接着将&lt;code&gt;GRUB_GFXMODE=auto&lt;/code&gt;修改为你的分辨率，以我的surface为例，改为&lt;code&gt;GRUB_GFXMODE=2736x1824&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;接着生成grub的配置文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;grub-mkconfig -o /boot/grub/grub.cfg
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;设置networkmanager开机自动启动&#34;&gt;设置NetworkManager开机自动启动&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;systemctl enable NetworkManager
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;为root用户设置密码&#34;&gt;为root用户设置密码&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;passwd
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;卸载分区-拔除介质&#34;&gt;卸载分区 拔除介质&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;umount /mnt/boot/efi
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;umount /mnt
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;拔除介质重新启动&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;reboot
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;小结&#34;&gt;小结&lt;/h2&gt;
&lt;p&gt;至此，我们成功安装了ArchLinux，然而此时系统处于非常精简的状态，距离日常使用还需要一些配置，安装一些需要的组件，下一部分我们将安装图形界面、配置显卡驱动、安装桌面环境&amp;hellip;.以及一些实用软件包。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>寻找两个有序数组的中位数</title>
        <link>https://bestoko.github.io/p/leetcode004/</link>
        <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
        
        <guid>https://bestoko.github.io/p/leetcode004/</guid>
        <description>&lt;img src="https://bestoko.github.io/p/leetcode004/leetcode.jpg" alt="Featured image of post 寻找两个有序数组的中位数" /&gt;&lt;p&gt;​	最近刚开始刷Leetcode，第一道&lt;code&gt;Hard&lt;/code&gt;题就难倒了我。题解里有位大神的算法很巧妙，我很容易就理解了，在此做个记录。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;题目链接：https://leetcode-cn.com/problems/median-of-two-sorted-arrays/&lt;/p&gt;
&lt;p&gt;题解链接：https://leetcode-cn.com/problems/median-of-two-sorted-arrays/solution/4-xun-zhao-liang-ge-you-xu-shu-zu-de-zhong-wei-shu/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;题目&#34;&gt;题目&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;给定两个大小为 m 和 n 的有序数组 &lt;code&gt;nums1&lt;/code&gt; 和 &lt;code&gt;nums2&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为 &lt;code&gt;O(log(m + n))&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;你可以假设 &lt;code&gt;nums1&lt;/code&gt; 和 &lt;code&gt;nums2&lt;/code&gt; 不会同时为空。&lt;/p&gt;
&lt;p&gt;示例 1:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nums1 = [1, 3]
nums2 = [2]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;则中位数是 &lt;code&gt;2.0&lt;/code&gt;
示例 2:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nums1 = [1, 2]
nums2 = [3, 4]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;则中位数是 &lt;code&gt;(2 + 3)/2 = 2.5&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;h3 id=&#34;首先要理解中位数&#34;&gt;首先要理解中位数&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;中位数（Median）又称中值，统计学中的专有名词，是按顺序排列的一组数据中居于中间位置的数，代表一个样本、种群或概率分布中的一个数值，其可将数值集合划分为相等的上下两部分。对于有限的数集，可以通过把所有观察值高低排序后找出正中间的一个作为中位数。如果观察值有偶数个，通常取最中间的两个数值的平均数作为中位数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;[2 3 5]&lt;/code&gt; 中位数是&lt;code&gt;3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[1 4 7 9]&lt;/code&gt; 中位数是&lt;code&gt;(4+7)/2=5.5&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;割cut的概念&#34;&gt;割(Cut)的概念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;通过切一刀，可以把有序数组分成左右两个部分，切的那一刀就被称为割(Cut)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;割(Cut)的左右会有两个元素，分别是左边最大值和右边最小值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定义&lt;code&gt;LMax= Max(LeftPart)&lt;/code&gt; &lt;code&gt;RMin = Min(RightPart)&lt;/code&gt;  //&lt;strong&gt;由小到大的有序数组&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;割可以割在2个数中间，也可以割在1个数上，如果割在一个数上，那么这个数既属于左边，也属于右边&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;奇数组:&lt;code&gt; [2 3 5]&lt;/code&gt; 对应的中位数为&lt;code&gt;3&lt;/code&gt;，假定割(Cut)在3上，我们可以把3分为2个： &lt;code&gt;[2（3/3） 5]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;因此&lt;code&gt;LMax=3&lt;/code&gt;, &lt;code&gt;RMin=3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;偶数组: &lt;code&gt;[1 4 7 9]&lt;/code&gt; 对应的中位数为 &lt;code&gt;(4 + 7) /2 = 5.5&lt;/code&gt;,假定割(Cut)在4和7之间： &lt;code&gt;[1 （4/7）9]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;因此&lt;code&gt;LMax=4&lt;/code&gt;,&lt;code&gt; RMin=7&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;割和第k个元素&#34;&gt;割和第&lt;code&gt;k&lt;/code&gt;个元素&lt;/h3&gt;
&lt;h4 id=&#34;一个数组&#34;&gt;一个数组&lt;/h4&gt;
&lt;p&gt;对于有序数组A，如果在k的位置割一下，容易得出&lt;code&gt;LMax = RMin = A[k]&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;两个数组&#34;&gt;两个数组&lt;/h4&gt;
&lt;p&gt;将两个数组合成一个有序数组时，第k位的元素&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们设:
&lt;code&gt;Ci&lt;/code&gt;为第&lt;code&gt; i&lt;/code&gt;个数组的割&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LMaxi&lt;/code&gt;为第&lt;code&gt;i&lt;/code&gt;个数组割后的左元素i&lt;/p&gt;
&lt;p&gt;&lt;code&gt;RMini&lt;/code&gt;为第&lt;code&gt;i&lt;/code&gt;个数组割后的右元素&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Leftpart&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Ci&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Rightpart&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;a&lt;!-- raw HTML omitted --&gt;1&lt;!-- raw HTML omitted --&gt;,a&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;,&amp;hellip;,a&lt;!-- raw HTML omitted --&gt;i&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;/&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;a&lt;!-- raw HTML omitted --&gt;i+1&lt;!-- raw HTML omitted --&gt;,a&lt;!-- raw HTML omitted --&gt;i+2&lt;!-- raw HTML omitted --&gt;,&amp;hellip;,a&lt;!-- raw HTML omitted --&gt;m&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;b&lt;!-- raw HTML omitted --&gt;1&lt;!-- raw HTML omitted --&gt;,b&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;,&amp;hellip;,b&lt;!-- raw HTML omitted --&gt;j&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;/&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;b&lt;!-- raw HTML omitted --&gt;j+1&lt;!-- raw HTML omitted --&gt;,b&lt;!-- raw HTML omitted --&gt;j+2&lt;!-- raw HTML omitted --&gt;,&amp;hellip;,b&lt;!-- raw HTML omitted --&gt;n&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;首先，因为数组是有序的，所以&lt;code&gt;LMax1 &amp;lt;= RMin1&lt;/code&gt;，&lt;code&gt;LMax2 &amp;lt;= RMin2&lt;/code&gt; //割在某个数上时左右相等&lt;/p&gt;
&lt;p&gt;其次，如果让&lt;code&gt;LMax1 &amp;lt;= RMin2&lt;/code&gt;，&lt;code&gt;LMax2 &amp;lt;= RMin1&lt;/code&gt; 呢？&lt;/p&gt;
&lt;p&gt;这表示左半边全部小于右半边。如果让左边的元素个数相加刚好为&lt;code&gt;k&lt;/code&gt;，那第&lt;code&gt;k&lt;/code&gt;个元素就是&lt;code&gt;max(LMax1, Lmax2)&lt;/code&gt;，也就是合并后有序数组左边&lt;code&gt;k&lt;/code&gt;个元素的最大值。&lt;/p&gt;
&lt;p&gt;那么如果&lt;code&gt;LMax1 &amp;gt; RMin2&lt;/code&gt;，说明数组1的左边元素太多，我们把&lt;code&gt;C1&lt;/code&gt;减小，&lt;code&gt;C2 = k - C1&lt;/code&gt;相应地增大。&lt;code&gt;LMax2 &amp;gt; RMin1&lt;/code&gt;同理，把&lt;code&gt;C2&lt;/code&gt;减小，&lt;code&gt;C1 = k - C2&lt;/code&gt;也就相应地增大。&lt;/p&gt;
&lt;h5 id=&#34;举例设k--3&#34;&gt;举例（设k = 3）&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;[2 3 5]
[1 4 7 9]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;设&lt;code&gt;C1 = 1&lt;/code&gt;，则 &lt;code&gt;C2 = k - C1 = 2&lt;/code&gt; 割后：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[2 3 / 5]
[1 / 4 7 9]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此时，&lt;code&gt;LMax1 = 3&lt;/code&gt;, &lt;code&gt;RMin1 = 5&lt;/code&gt;, &lt;code&gt;LMax2 = 1&lt;/code&gt;, &lt;code&gt;RMin2 = 4&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;满足 &lt;code&gt;LMax1 &amp;lt; RMin2&lt;/code&gt; 且 &lt;code&gt;LMax2 &amp;lt; RMin1 &lt;/code&gt;，&lt;/p&gt;
&lt;p&gt;所以第&lt;code&gt;3&lt;/code&gt;个元素为&lt;code&gt;max(LMax1, LMax2) = 3&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;两个数组合并后的长度问题-本篇题解巧妙所在&#34;&gt;&lt;strong&gt;两个数组合并后的长度问题&lt;/strong&gt; （本篇题解巧妙所在）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;两个数组的最大问题是，它们合并后，m+n总数可能为奇, 也可能为偶，所以我们得想法让m+n总是为偶数&lt;/p&gt;
&lt;p&gt;通过虚拟加入‘#’，我们让m转换成2m+1 ，n转换成2n+1, 两数之和就变成了2m+2n+2，恒为偶数。&lt;/p&gt;
&lt;p&gt;注意是虚拟加，其实根本没这一步，通过下面的转换，我们可以保证虚拟加后每个元素跟原来的元素一一对应&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;before&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;len&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;after&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;len&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[1 4 7 9]&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[# 1 # 4 # 7 # 9]&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[2 3 5]&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[# 2 # 3 # 5 ]&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这么虚拟加后，&lt;strong&gt;每个位置可以通过/2得到原来元素的位置&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;比如 2，原来在&lt;code&gt;0&lt;/code&gt;位，现在是1位，&lt;code&gt;1/2=0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;比如 3，原来在&lt;code&gt;1&lt;/code&gt;位，现在是3位，&lt;code&gt;3/2=1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;比如 5，原来在&lt;code&gt;2&lt;/code&gt;位，现在是5位，&lt;code&gt;5/2=2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;比如 9，原来在&lt;code&gt;3&lt;/code&gt;位，现在是7位，&lt;code&gt;7/2=3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;而对于割(&lt;code&gt;Cut&lt;/code&gt;)，如果割在&lt;code&gt;‘#’&lt;/code&gt;上等于割在2个元素之间，割在数字上等于把数字划到2个部分，总是有以下成立：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LMaxi = (Ci-1)/2 位置上的元素
RMini = Ci/2 位置上的元素&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;割在&lt;code&gt;3&lt;/code&gt;上，&lt;code&gt;C = 3&lt;/code&gt;，&lt;code&gt;LMax=a[(3-1)/2]=A[1]，RMin=a[3/2] =A[1]&lt;/code&gt;，刚好都是3的位置！&lt;/p&gt;
&lt;p&gt;割在4/7之间‘#’，&lt;code&gt;C = 4&lt;/code&gt;，&lt;code&gt;LMax=A[(4-1)/2]=A[1]=4 ，RMin=A[4/2]=A[2]=7&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;剩下的事情就好办了，把2个数组看做一个虚拟的数组A，A有&lt;code&gt;2m+2n+2&lt;/code&gt;个元素，割在&lt;code&gt;m+n+1&lt;/code&gt;处，所以我们只需找到&lt;code&gt;m+n+1&lt;/code&gt;位置的元素和&lt;code&gt;m+n+2&lt;/code&gt;位置的元素就行了。&lt;/p&gt;
&lt;p&gt;左边：&lt;code&gt;A[m+n+1] = Max(LMax1,LMax2)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;右边：&lt;code&gt;A[m+n+2] = Min(RMin1,RMin2)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;==&amp;gt;&lt;code&gt;Mid = (A[m+n+1]+A[m+n+2])/2 = (Max(LMax1,LMax2) + Min(RMin1,RMin2) )/2&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;最快的割cut是使用二分法有2个数组我们对哪个做二分呢&#34;&gt;最快的割(&lt;code&gt;Cut&lt;/code&gt;)是使用二分法，有2个数组，我们对哪个做二分呢？&lt;/h3&gt;
&lt;p&gt;根据之前的分析，我们知道了，只要C1或C2确定，另外一个也就确定了。这里，为了效率，我们肯定是选&lt;code&gt;长度较短&lt;/code&gt;的做二分，假设为&lt;code&gt;C1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LMax1&amp;gt;RMin2&lt;/code&gt;，把&lt;code&gt;C1&lt;/code&gt;减小，&lt;code&gt;C2&lt;/code&gt;增大。—&amp;gt; &lt;code&gt;C1&lt;/code&gt;向左二分&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LMax2&amp;gt;RMin1&lt;/code&gt;，把&lt;code&gt;C1&lt;/code&gt;增大，&lt;code&gt;C2&lt;/code&gt;减小。—&amp;gt; &lt;code&gt;C1&lt;/code&gt;向右二分&lt;/p&gt;
&lt;h3 id=&#34;如果c1或c2已经到头了怎么办&#34;&gt;如果&lt;code&gt;C1&lt;/code&gt;或&lt;code&gt;C2&lt;/code&gt;已经到头了怎么办？&lt;/h3&gt;
&lt;p&gt;这种情况出现在：&lt;code&gt;如果有个数组完全小于或大于中值&lt;/code&gt;。假定n&amp;lt;m, 可能有4种情况：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;C1 = 0&lt;/code&gt; —— 数组1整体都在右边了，所以都比中值大，中值在数组2中，简单的说就是数组1割后的左边是空了，所以我们可以假定&lt;code&gt;LMax1 = INT_MIN&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;C1 =2n&lt;/code&gt; —— 数组1整体都在左边了，所以都比中值小，中值在数组2中 ，简单的说就是数组1割后的右边是空了，所以我们可以假定&lt;code&gt;RMin1= INT_MAX&lt;/code&gt;，来保证&lt;code&gt;LMax2 &amp;lt; RMin1&lt;/code&gt;恒成立&lt;/p&gt;
&lt;p&gt;&lt;code&gt;C2 = 0 &lt;/code&gt;—— 数组2整体在右边了，所以都比中值大，中值在数组1中 ，简单的说就是数组2割后的左边是空了，所以我们可以假定&lt;code&gt;LMax2 = INT_MIN&lt;/code&gt;
&lt;code&gt;C2 = 2m &lt;/code&gt;—— 数组2整体在左边了，所以都比中值小，中值在数组1中, 简单的说就是数组2割后的右边是空了，为了让&lt;code&gt;LMax1 &amp;lt; RMin2 &lt;/code&gt;恒成立，我们可以假定&lt;code&gt;RMin2 = INT_MAX&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;代码&#34;&gt;代码&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#define max(a,b) (((a) &amp;gt; (b)) ? (a) : (b))
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define min(a,b) (((a) &amp;lt; (b)) ? (a) : (b))
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;findMedianSortedArrays&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
		&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//保证数组1一定最短
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;findMedianSortedArrays&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nums2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	
		&lt;span class=&#34;c1&#34;&gt;// Ci 为第i个数组的割,比如C1为2时表示第1个数组只有2个元素。LMaxi为第i个数组割后的左元素。RMini为第i个数组割后的右元素。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LMax1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LMax2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RMin1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RMin2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//我们目前是虚拟加了&amp;#39;#&amp;#39;所以数组1是2*n长度
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	
		&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;//二分
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//c1是二分的结果
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	
			&lt;span class=&#34;n&#34;&gt;LMax1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;INT_MIN&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;RMin1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;INT_MAX&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;LMax2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;INT_MIN&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;RMin2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;INT_MAX&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	
			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LMax1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RMin2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
				&lt;span class=&#34;n&#34;&gt;hi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LMax2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RMin1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
				&lt;span class=&#34;n&#34;&gt;lo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
				&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LMax1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LMax2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RMin1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RMin2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;


&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[])&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
	
	&lt;span class=&#34;n&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;solution&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;solution&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findMedianSortedArrays&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nums1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>GBA文件转CIA文件，在3ds上游玩GBA游戏的解决方案</title>
        <link>https://bestoko.github.io/p/gba2cia/</link>
        <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
        
        <guid>https://bestoko.github.io/p/gba2cia/</guid>
        <description>&lt;img src="https://bestoko.github.io/p/gba2cia/3ds.jpg" alt="Featured image of post GBA文件转CIA文件，在3ds上游玩GBA游戏的解决方案" /&gt;&lt;h2 id=&#34;前情提要&#34;&gt;前情提要&lt;/h2&gt;
&lt;p&gt;&lt;del&gt;为什么要水这么一篇文章&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;在把switch借给朋友玩的这段时间，我把目光投向了吃灰已久的3ds&amp;hellip;.&lt;/p&gt;
&lt;p&gt;我想要在实机上游玩gba游戏，但是3ds上的模拟器又有各种各样的兼容性问题，达不到eshop里VC金银流畅的游玩体验；宣称能游玩GBA的DSTWO PLUS烧录卡早已停产，某宝/闲鱼的价格居高不下&amp;hellip;经过一番摸索，我找到了&lt;strong&gt;可能&lt;/strong&gt;是现今最好的解决方案。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一台BOOT9STARP(B9S)破解的3ds&lt;/p&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;https://3ds.hacks.guide/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;3ds破解手册&lt;/a&gt;或者&lt;a class=&#34;link&#34; href=&#34;https://stray-soul.site/index.php/3dshack-getstarted&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;一只火狐大佬整理的教程&lt;/a&gt;(推荐)&lt;/p&gt;
&lt;p&gt;嫌麻烦的同学可以&lt;del&gt;交给热心摊主处理&lt;/del&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gbatemp.net/threads/release-ultimate-gba-vc-injector-for-3ds.438057/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ultimate GBA VC Injector for 3DS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;汉化版&lt;a class=&#34;link&#34; href=&#34;https://1drv.ms/u/s!AuzARhFyMrG9lD29u9s_vl-PE0CN?e=pyFypW&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;下载链接&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;你想要在3ds上运行的GBA游戏ROM文件&lt;/p&gt;
&lt;p&gt;这里以&lt;strong&gt;漆黑的魅影&lt;/strong&gt;为例（很棒的GBA宝可梦改版，我一直想在实机上玩）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;gba-转cia&#34;&gt;GBA 转CIA&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;打开软件并导入下载好的&lt;code&gt;.gba&lt;/code&gt;文件，ROM大小和存档类型会自动确认(汉化版ROM往往是&lt;em&gt;数据库未找到该游戏&lt;/em&gt;，请确保选择的&lt;strong&gt;正确无误&lt;/strong&gt;以免影响存档)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 201; 
			flex-basis: 483px&#34;
	&gt;
	&lt;a href=&#34;https://bestoko.github.io/p/gba2cia/gba2cia1.png&#34; data-size=&#34;1185x588&#34;&gt;
		&lt;img src=&#34;https://bestoko.github.io/p/gba2cia/gba2cia1.png&#34;
			width=&#34;1185&#34;
			height=&#34;588&#34;
			srcset=&#34;https://bestoko.github.io/p/gba2cia/gba2cia1_hu5614188b182b9fb468f104e91324a5f3_101095_480x0_resize_box_3.png 480w, https://bestoko.github.io/p/gba2cia/gba2cia1_hu5614188b182b9fb468f104e91324a5f3_101095_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;gba2cia1&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;gba2cia1&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 152; 
			flex-basis: 364px&#34;
	&gt;
	&lt;a href=&#34;https://bestoko.github.io/p/gba2cia/gba2cia2.png&#34; data-size=&#34;824x542&#34;&gt;
		&lt;img src=&#34;https://bestoko.github.io/p/gba2cia/gba2cia2.png&#34;
			width=&#34;824&#34;
			height=&#34;542&#34;
			srcset=&#34;https://bestoko.github.io/p/gba2cia/gba2cia2_huc377d2b05e16456aa8ccecdd51023b1c_98502_480x0_resize_box_3.png 480w, https://bestoko.github.io/p/gba2cia/gba2cia2_huc377d2b05e16456aa8ccecdd51023b1c_98502_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;gba2cia2&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;gba2cia2&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;填写要转换的VC图标和名称(因为3ds字库的原因建议不要使用中文XD)，设置3D横幅(就是选中这个游戏时3ds上屏的画面)&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 152; 
			flex-basis: 364px&#34;
	&gt;
	&lt;a href=&#34;https://bestoko.github.io/p/gba2cia/gba2cia3.png&#34; data-size=&#34;824x542&#34;&gt;
		&lt;img src=&#34;https://bestoko.github.io/p/gba2cia/gba2cia3.png&#34;
			width=&#34;824&#34;
			height=&#34;542&#34;
			srcset=&#34;https://bestoko.github.io/p/gba2cia/gba2cia3_hud42ce9c6261d9ac0dd27d48e1680c9cd_154143_480x0_resize_box_3.png 480w, https://bestoko.github.io/p/gba2cia/gba2cia3_hud42ce9c6261d9ac0dd27d48e1680c9cd_154143_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;gba2cia3&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;gba2cia3&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 152; 
			flex-basis: 364px&#34;
	&gt;
	&lt;a href=&#34;https://bestoko.github.io/p/gba2cia/gba2cia4.png&#34; data-size=&#34;824x542&#34;&gt;
		&lt;img src=&#34;https://bestoko.github.io/p/gba2cia/gba2cia4.png&#34;
			width=&#34;824&#34;
			height=&#34;542&#34;
			srcset=&#34;https://bestoko.github.io/p/gba2cia/gba2cia4_hu7027c39df039b751098fdffd4627263c_140007_480x0_resize_box_3.png 480w, https://bestoko.github.io/p/gba2cia/gba2cia4_hu7027c39df039b751098fdffd4627263c_140007_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;gba2cia4&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;gba2cia4&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置VC参数并导出CIA文件(注意当转换多个&lt;code&gt;.cia&lt;/code&gt;文件时，确保每个文件的&lt;em&gt;产品代码&lt;/em&gt;及&lt;em&gt;项目ID&lt;/em&gt;都不一样)&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 152; 
			flex-basis: 364px&#34;
	&gt;
	&lt;a href=&#34;https://bestoko.github.io/p/gba2cia/gba2cia5.png&#34; data-size=&#34;824x542&#34;&gt;
		&lt;img src=&#34;https://bestoko.github.io/p/gba2cia/gba2cia5.png&#34;
			width=&#34;824&#34;
			height=&#34;542&#34;
			srcset=&#34;https://bestoko.github.io/p/gba2cia/gba2cia5_hufab2e8288898ca1b4d27c21427f3c389_143016_480x0_resize_box_3.png 480w, https://bestoko.github.io/p/gba2cia/gba2cia5_hufab2e8288898ca1b4d27c21427f3c389_143016_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;gba2cia5&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;gba2cia5&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在3ds上安装转换好的&lt;code&gt;.cia&lt;/code&gt;文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;关于如何B9S&lt;a class=&#34;link&#34; href=&#34;https://stray-soul.site/index.php/install-cia&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;如何安装cia文件&lt;/strong&gt;&lt;/a&gt;这里不再赘述(实在懒得截图了)&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 133; 
			flex-basis: 320px&#34;
	&gt;
	&lt;a href=&#34;https://bestoko.github.io/p/gba2cia/gba2cia6.png&#34; data-size=&#34;4608x3456&#34;&gt;
		&lt;img src=&#34;https://bestoko.github.io/p/gba2cia/gba2cia6.png&#34;
			width=&#34;4608&#34;
			height=&#34;3456&#34;
			srcset=&#34;https://bestoko.github.io/p/gba2cia/gba2cia6_hu4cb3b5259b7551644a7156ad5f6a4c56_716178_480x0_resize_box_3.png 480w, https://bestoko.github.io/p/gba2cia/gba2cia6_hu4cb3b5259b7551644a7156ad5f6a4c56_716178_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;gba2cia6&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;gba2cia6&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;大功告成~&lt;/p&gt;
&lt;h2 id=&#34;备注事项&#34;&gt;备注事项&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;据说部分老款3ds对这种方式转换的&lt;code&gt;.cia&lt;/code&gt;支持不好，会出现黑屏情况(我的美版老小三反正测试是没问题啦)&lt;/li&gt;
&lt;li&gt;港版不支持港版不支持港版不支持&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;存档类型&lt;/strong&gt;一定要设置正确&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Git学习笔记</title>
        <link>https://bestoko.github.io/p/gitnotes/</link>
        <pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate>
        
        <guid>https://bestoko.github.io/p/gitnotes/</guid>
        <description>&lt;img src="https://bestoko.github.io/p/gitnotes/git_logo.jpg" alt="Featured image of post Git学习笔记" /&gt;&lt;blockquote&gt;
&lt;p&gt;Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。&lt;/p&gt;
&lt;p&gt;Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。&lt;/p&gt;
&lt;p&gt;Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 297; 
			flex-basis: 713px&#34;
	&gt;
	&lt;a href=&#34;https://bestoko.github.io/p/gitnotes/learnGit.png&#34; data-size=&#34;1401x471&#34;&gt;
		&lt;img src=&#34;https://bestoko.github.io/p/gitnotes/learnGit.png&#34;
			width=&#34;1401&#34;
			height=&#34;471&#34;
			srcset=&#34;https://bestoko.github.io/p/gitnotes/learnGit_hu6c00e95ffa94d0d773fe80624b67f967_105681_480x0_resize_box_3.png 480w, https://bestoko.github.io/p/gitnotes/learnGit_hu6c00e95ffa94d0d773fe80624b67f967_105681_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;learnGit&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;learnGit&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;常用指令&#34;&gt;常用指令&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ git init  &lt;span class=&#34;c1&#34;&gt;# 在当前目录新建一个 Git 代码库&lt;/span&gt;
$ git clone &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;url&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 下载一个项目和它的整个代码历史&lt;/span&gt;
$ git config --list &lt;span class=&#34;c1&#34;&gt;# 显示当前的 Git 配置&lt;/span&gt;
$ git config -e &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;--global&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 编辑 Git 配置文件&lt;/span&gt;
$ git add  &lt;span class=&#34;c1&#34;&gt;# 添加指定文件到暂存区&lt;/span&gt;
$ git rm   &lt;span class=&#34;c1&#34;&gt;# 删除工作区文件，并且将这次删除放入暂存区&lt;/span&gt;
$ git commit -m &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;message&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 提交暂存区到仓库区&lt;/span&gt;
$ git commit -a &lt;span class=&#34;c1&#34;&gt;# 提交工作区自上次 commit 之后的变化，直接到仓库区&lt;/span&gt;
$ git commit --amend -m &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;message&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 使用一次新的 commit，替代上一次提交 如果代码没有任何新变化，则用来改写上一次 commit 的提交信息&lt;/span&gt;
$ git commit --amend &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;file1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;file2&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; ...  &lt;span class=&#34;c1&#34;&gt;# 重做上一次 commit，并包括指定文件的新变化&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# 分支相关&lt;/span&gt;
$ git branch  &lt;span class=&#34;c1&#34;&gt;# 列出所有本地分支&lt;/span&gt;
$ git branch -r  &lt;span class=&#34;c1&#34;&gt;# 列出所有远程分支&lt;/span&gt;
$ git branch &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;branch-name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 新建一个分支，但依然停留在当前分支&lt;/span&gt;
$ git checkout &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;branch-name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 切换到指定分支，并更新工作区&lt;/span&gt;
$ git checkout -b &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;branch&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 新建一个分支，并切换到该分支&lt;/span&gt;
$ git branch &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;branch&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;commit&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 新建一个分支，指向指定 commit&lt;/span&gt;
$ git checkout -b &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;branch&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;tag&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 新建一个分支，指向某个 tag&lt;/span&gt;
$ git branch --track &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;branch&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;remote-branch&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 新建一个分支，与指定的远程分支建立追踪关系&lt;/span&gt;
$ git branch --set-upstream &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;branch&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;remote-branch&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 建立追踪关系，在现有分支与指定的远程分支之间&lt;/span&gt;
$ git merge &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;branch&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 合并指定分支到当前分支&lt;/span&gt;
$ git cherry-pick &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;commit&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 选择一个 commit，合并进当前分支&lt;/span&gt;
$ git branch -d &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;branch-name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 删除分支&lt;/span&gt;
$ git push origin --delete &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;branch-name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 删除远程分支&lt;/span&gt;
$ git branch -dr &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;remote/branch&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 删除远程分支&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# 标签&lt;/span&gt;
$ git tag  &lt;span class=&#34;c1&#34;&gt;# 列出所有 tag&lt;/span&gt;
$ git tag &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;tag&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 新建一个 tag 在当前 commit&lt;/span&gt;
$ git tag &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;tag&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;commit&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 新建一个 tag 在指定 commit&lt;/span&gt;
$ git show &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;tag&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 查看 tag 信息&lt;/span&gt;
$ git push &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;remote&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;tag&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 提交指定 tag&lt;/span&gt;
$ git push &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;remote&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; --tags   &lt;span class=&#34;c1&#34;&gt;# 提交所有 tag&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# 查看&lt;/span&gt;
$ git status &lt;span class=&#34;c1&#34;&gt;# 显示有变更的文件&lt;/span&gt;
$ git log &lt;span class=&#34;c1&#34;&gt;# 显示当前分支的版本历史&lt;/span&gt;
$ git log --stat &lt;span class=&#34;c1&#34;&gt;# 显示 commit 历史，以及每次 commit 发生变更的文件&lt;/span&gt;
$ git log --follow &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;file&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 显示某个文件的版本历史，包括文件改名&lt;/span&gt;
$ git log -p &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;file&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 显示指定文件相关的每一次 diff&lt;/span&gt;
$ git blame &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;file&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 显示指定文件是什么人在什么时间修改过&lt;/span&gt;
$ git diff &lt;span class=&#34;c1&#34;&gt;# 显示暂存区和工作区的差异&lt;/span&gt;
$ git diff --cached &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;file&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 显示暂存区和上一个 commit 的差异&lt;/span&gt;
$ git diff HEAD &lt;span class=&#34;c1&#34;&gt;# 显示工作区与当前分支最新 commit 之间的差异&lt;/span&gt;
$ git diff &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;first-branch&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;...&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;second-branch&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 显示两次提交之间的差异&lt;/span&gt;
$ git show &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;commit&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 显示某次提交的元数据和内容变化&lt;/span&gt;
$ git show --name-only &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;commit&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 显示某次提交发生变化的文件&lt;/span&gt;
$ git show &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;commit&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;filename&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 显示某次提交时，某个文件的内容&lt;/span&gt;
$ git reflog &lt;span class=&#34;c1&#34;&gt;# 显示当前分支的最近几次提交&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# 远程&lt;/span&gt;
$ git fetch &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;remote&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 下载远程仓库的所有变动&lt;/span&gt;
$ git remote -v  &lt;span class=&#34;c1&#34;&gt;# 显示所有远程仓库&lt;/span&gt;
$ git remote show &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;remote&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 显示某个远程仓库的信息&lt;/span&gt;
$ git remote add &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;shortname&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;url&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 增加一个新的远程仓库，并命名&lt;/span&gt;
$ git pull &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;remote&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;branch&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 取回远程仓库的变化，并与本地分支合并&lt;/span&gt;
$ git push &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;remote&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;branch&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 上传本地指定分支到远程仓库&lt;/span&gt;
$ git push &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;remote&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; --force &lt;span class=&#34;c1&#34;&gt;# 强行推送当前分支到远程仓库，即使有冲突&lt;/span&gt;
$ git push &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;remote&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; --all &lt;span class=&#34;c1&#34;&gt;# 推送所有分支到远程仓库&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# 撤销&lt;/span&gt;
$ git checkout &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;file&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 恢复暂存区的指定文件到工作区&lt;/span&gt;
$ git checkout &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;commit&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;file&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 恢复某个 commit 的指定文件到工作区&lt;/span&gt;
$ git checkout . &lt;span class=&#34;c1&#34;&gt;# 恢复上一个 commit 的所有文件到工作区&lt;/span&gt;
$ git reset &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;file&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 重置暂存区的指定文件，与上一次 commit 保持一致，但工作区不变&lt;/span&gt;
$ git reset --hard &lt;span class=&#34;c1&#34;&gt;# 重置暂存区与工作区，与上一次 commit 保持一致&lt;/span&gt;
$ git reset &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;commit&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 重置当前分支的指针为指定 commit，同时重置暂存区，但工作区不变&lt;/span&gt;
$ git reset --hard &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;commit&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 重置当前分支的 HEAD 为指定 commit，同时重置暂存区和工作区，与指定 commit 一致&lt;/span&gt;
$ git reset --keep &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;commit&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 重置当前 HEAD 为指定 commit，但保持暂存区和工作区不变&lt;/span&gt;
$ git revert &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;commit&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 新建一个 commit，用来撤销指定 commit，后者的所有变化都将被前者抵消，并且应用到当前分支&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;学习资源&#34;&gt;学习资源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://rogerdudler.github.io/git-guide/index.zh.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;git - 简明指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://git-scm.com/book/zh/v1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;pro git（中文版）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git 教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://gitref.org/zh/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git 参考手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git 指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://pcottle.github.io/learnGitBranching/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Learn Git Branching&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Markdown学习笔记</title>
        <link>https://bestoko.github.io/p/markdwonnotes/</link>
        <pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate>
        
        <guid>https://bestoko.github.io/p/markdwonnotes/</guid>
        <description>&lt;img src="https://bestoko.github.io/p/markdwonnotes/markdown.jpg" alt="Featured image of post Markdown学习笔记" /&gt;&lt;blockquote&gt;
&lt;p&gt;Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以下是Markdown的基础语法&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;~~删除线~~
&lt;span class=&#34;ge&#34;&gt;*斜体*&lt;/span&gt;
&lt;span class=&#34;ge&#34;&gt;_斜体第二种方法_&lt;/span&gt;

&lt;span class=&#34;gs&#34;&gt;**加粗**&lt;/span&gt;
&lt;span class=&#34;gs&#34;&gt;__加粗的第二种方法__&lt;/span&gt;


&lt;span class=&#34;gs&#34;&gt;___粗斜体___&lt;/span&gt;


两个enter是换行，或者用&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;标签表示换行


用一行的=或者-表示一级标题和二级标题。如：
一级标题
=======
二级标题
--------


也可以在前面加上一到六个#表示标题的1级到6级，标题前加一个空格。如：
&lt;span class=&#34;gh&#34;&gt;# 一级标题
&lt;/span&gt;&lt;span class=&#34;gh&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;## 二级标题
&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;### 三级标题
&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;#### 四级标题
&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;##### 五级标题
&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;###### 六级标题
&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;&lt;/span&gt;

无序列表：在前面加上 * 或者 + 或者 - 然后加个空格：
&lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; ABC
&lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; DEF
&lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; GHI

+ JKL
+ MNO
+ PQR

&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; STU
&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; VWX
&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; YZZ


有序列表：数字+英文句点+空格。如下：
&lt;span class=&#34;k&#34;&gt;1.&lt;/span&gt; 呵呵
&lt;span class=&#34;k&#34;&gt;2.&lt;/span&gt; 哈哈
&lt;span class=&#34;k&#34;&gt;3.&lt;/span&gt; 嘿嘿
&lt;span class=&#34;k&#34;&gt;4.&lt;/span&gt; 哼哼

&lt;span class=&#34;ni&#34;&gt;&amp;amp;lt;&lt;/span&gt;   // 会显示为”&lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;“
&lt;span class=&#34;ni&#34;&gt;&amp;amp;amp;&lt;/span&gt;  // 会显示为”&lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt;“：在 href 属性里面，必须将 &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; 转变为 &lt;span class=&#34;ni&#34;&gt;&amp;amp;amp;&lt;/span&gt;
\.     // 为了防止产生&amp;#34;1.&amp;#34;变为有序列表，则可以写成&amp;#34;1\.&amp;#34;

 &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; _   // 如果 * 和 _ 两边都有空白的话，它们就只会被当成普通的符号。


&amp;gt;只在整个段落的第一行最前面加上大于号可以显示引用（此时出现引用形式，并且为斜体）。但是引言内如果要断行，那个空行也必须在前面加上大于号。就像下面写的酱紫：
&amp;gt;&amp;gt;区块引言也可以有级别，在前面加上不同数量的大于号即可。比如说这就是一个二级引言。
&amp;gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt;这是一个三级引言。格式会显示为字体更小了。

建立分割线的方法有：
&lt;span class=&#34;ge&#34;&gt;* *&lt;/span&gt; *
&lt;span class=&#34;ge&#34;&gt;**&lt;/span&gt;***
&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; - -
-------------------


超级链接：[超级链接显示的文字](超级链接的网址，可以是绝对路径、相对路径)
也支持HTML格式的超级链接&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://www.baidu.com/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;百度&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

如果要标记一小段行内程序代码，可以用反引号把它包起来，像这样：
Use the &lt;span class=&#34;sb&#34;&gt;`printf()`&lt;/span&gt; function.


插入图片：![图片的替换文字](图片的地址或路径)
![&lt;span class=&#34;nt&#34;&gt;风景区图片&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;/Snip20160202_227.png&lt;/span&gt;)

Email邮件：
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;123456789&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;qq&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

锚点：(能够链接到某个一级标题)
[&lt;span class=&#34;nt&#34;&gt;想要显示的名称&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;#锚点的名称&lt;/span&gt;)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
